{"ast":null,"code":"var _jsxFileName = \"/Users/luketyson/Documents/spotify-clone/src/App.js\";\nimport React, { useEffect, useState } from 'react';\nimport Login from './Login';\nimport Player from './Player';\nimport { getTokenFromUrl } from \"./spotify\";\nimport './App.css';\nimport SpotifyWebApi from 'spotify-web-api-js';\nimport { useDataLayerValue } from \"./DataLayer\";\nconst spotify = new SpotifyWebApi(); //f5d287d32f1d4ce5a1e97ac8fd472a25\n\nfunction App() {\n  const [{\n    token\n  }, dispatch] = useDataLayerValue(); //retrieve hash token at login\n\n  useEffect(() => {\n    const hash = getTokenFromUrl(); //clear hash token from url\n\n    window.location.hash = \"\"; //retrieve access token\n\n    const _token = hash.access_token; //Set spotify access token\n\n    if (_token) {\n      dispatch({\n        type: 'SET_TOKEN',\n        token: _token\n      });\n      spotify.setAccessToken(_token); //retrieve user data with API\n\n      spotify.getMe().then(user => {\n        dispatch({\n          type: 'SET_USER',\n          user: user\n        });\n      }); //retrieve users public playlists with API\n\n      spotify.getUserPlaylists().then(playlists => {\n        console.log('playlists: ', playlists);\n        dispatch({\n          type: 'SET_PLAYLISTS',\n          playlists: playlists\n        });\n      });\n      spotify.getPlaylist('0DuoU1z6QxYVaLlnCjc365').then(response);\n    }\n\n    console.log(\"the token is\", _token);\n  }, []); //console.log('user', user);\n\n  console.log('token: ', token);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }, token ? /*#__PURE__*/React.createElement(Player, {\n    spotify: spotify,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }) : /*#__PURE__*/React.createElement(Login, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/luketyson/Documents/spotify-clone/src/App.js"],"names":["React","useEffect","useState","Login","Player","getTokenFromUrl","SpotifyWebApi","useDataLayerValue","spotify","App","token","dispatch","hash","window","location","_token","access_token","type","setAccessToken","getMe","then","user","getUserPlaylists","playlists","console","log","getPlaylist","response"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAAQC,eAAR,QAA8B,WAA9B;AACA,OAAO,WAAP;AACA,OAAOC,aAAP,MAA0B,oBAA1B;AACA,SAASC,iBAAT,QAAkC,aAAlC;AAEA,MAAMC,OAAO,GAAG,IAAIF,aAAJ,EAAhB,C,CAEA;;AAEA,SAASG,GAAT,GAAe;AAEb,QAAK,CAAC;AAACC,IAAAA;AAAD,GAAD,EAAUC,QAAV,IAAsBJ,iBAAiB,EAA5C,CAFa,CAKb;;AACAN,EAAAA,SAAS,CAAE,MAAM;AACf,UAAMW,IAAI,GAAGP,eAAe,EAA5B,CADe,CAEf;;AACAQ,IAAAA,MAAM,CAACC,QAAP,CAAgBF,IAAhB,GAAuB,EAAvB,CAHe,CAIf;;AACA,UAAMG,MAAM,GAAGH,IAAI,CAACI,YAApB,CALe,CAOf;;AACA,QAAGD,MAAH,EAAU;AAERJ,MAAAA,QAAQ,CAAC;AACPM,QAAAA,IAAI,EAAE,WADC;AAEPP,QAAAA,KAAK,EAAEK;AAFA,OAAD,CAAR;AAOAP,MAAAA,OAAO,CAACU,cAAR,CAAuBH,MAAvB,EATQ,CAUR;;AACAP,MAAAA,OAAO,CAACW,KAAR,GACGC,IADH,CACQC,IAAI,IAAI;AAEZV,QAAAA,QAAQ,CAAC;AACPM,UAAAA,IAAI,EAAE,UADC;AAEPI,UAAAA,IAAI,EAAEA;AAFC,SAAD,CAAR;AAID,OAPH,EAXQ,CAmBN;;AACAb,MAAAA,OAAO,CAACc,gBAAR,GACGF,IADH,CACSG,SAAD,IAAe;AACnBC,QAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BF,SAA3B;AACAZ,QAAAA,QAAQ,CAAC;AACPM,UAAAA,IAAI,EAAE,eADC;AAEPM,UAAAA,SAAS,EAAEA;AAFJ,SAAD,CAAR;AAKD,OARH;AAUEf,MAAAA,OAAO,CAACkB,WAAR,CAAoB,wBAApB,EACGN,IADH,CACQO,QADR;AAGL;;AACDH,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BV,MAA5B;AAED,GA5CQ,EA4CN,EA5CM,CAAT,CANa,CAoDb;;AACAS,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAsBf,KAAtB;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEIA,KAAK,gBACH,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEF,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADG,gBAEH,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJN,CADF;AAeD;;AAED,eAAeC,GAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport Login from './Login'\nimport Player from './Player'\nimport {getTokenFromUrl} from \"./spotify\"\nimport './App.css';\nimport SpotifyWebApi from 'spotify-web-api-js';\nimport { useDataLayerValue } from \"./DataLayer\";\n\nconst spotify = new SpotifyWebApi();\n\n//f5d287d32f1d4ce5a1e97ac8fd472a25\n\nfunction App() {\n\n  const[{token}, dispatch] = useDataLayerValue();\n \n\n  //retrieve hash token at login\n  useEffect( () => {\n    const hash = getTokenFromUrl();\n    //clear hash token from url\n    window.location.hash = \"\";\n    //retrieve access token\n    const _token = hash.access_token;\n\n    //Set spotify access token\n    if(_token){\n\n      dispatch({\n        type: 'SET_TOKEN',\n        token: _token,\n      })\n\n      \n      \n      spotify.setAccessToken(_token)\n      //retrieve user data with API\n      spotify.getMe()\n        .then(user => {\n          \n          dispatch({\n            type: 'SET_USER',\n            user: user \n          })\n        })\n        //retrieve users public playlists with API\n        spotify.getUserPlaylists()\n          .then((playlists) => {\n            console.log('playlists: ', playlists);\n            dispatch({\n              type: 'SET_PLAYLISTS',\n              playlists: playlists,\n              \n            });\n          });\n\n          spotify.getPlaylist('0DuoU1z6QxYVaLlnCjc365')\n            .then(response)\n          \n    }\n    console.log(\"the token is\", _token);\n    \n  }, []);\n\n  //console.log('user', user);\n  console.log('token: ',token)\n\n  return (\n    <div className=\"app\">\n      {\n        token ? \n          <Player spotify={spotify}/> : \n          <Login/>\n      }\n      \n      {/*Spotify Logo */}\n\n      {/* login button */}\n\n\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}